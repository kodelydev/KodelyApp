{
	"extension.displayName": "Kodely",
	"extension.description": "A cost-efficient AI coding assistant that optimizes your LLM usage.",
	"views.contextMenu.label": "Kodely",
	"views.terminalMenu.label": "Kodely",
	"views.activitybar.title": "Kodely",
	"command.newTask.title": "New Task",
	"command.mcpServers.title": "MCP Servers",
	"command.prompts.title": "Prompts",
	"command.history.title": "History",
	"command.openInEditor.title": "Open in Editor",
	"command.settings.title": "Settings",
	"command.documentation.title": "Documentation",
	"command.openInNewTab.title": "Open In New Tab",
	"command.explainCode.title": "Explain Code",
	"command.fixCode.title": "Fix Code",
	"command.improveCode.title": "Improve Code",
	"command.addToContext.title": "Add To Context",
	"command.focusInput.title": "Focus Input Field",
	"command.setCustomStoragePath.title": "Set Custom Storage Path",
	"command.terminal.addToContext.title": "Add Terminal Content to Context",
	"command.terminal.fixCommand.title": "Fix This Command",
	"command.terminal.explainCommand.title": "Explain This Command",
	"command.terminal.fixCommandInCurrentTask.title": "Fix This Command (Current Task)",
	"command.terminal.explainCommandInCurrentTask.title": "Explain This Command (Current Task)",
	"command.acceptInput.title": "Accept Input/Suggestion",
	"configuration.title": "Kodely",
	"commands.allowedCommands.description": "Commands that can be auto-executed when 'Always approve execute operations' is enabled",
	"settings.vsCodeLmModelSelector.description": "Settings for VSCode Language Model API",
	"settings.vsCodeLmModelSelector.vendor.description": "The vendor of the language model (e.g. copilot)",
	"settings.vsCodeLmModelSelector.family.description": "The family of the language model (e.g. gpt-4)",
	"settings.customStoragePath.description": "Custom storage path. Leave empty to use the default location. Supports absolute paths (e.g. 'D:\\KodelyStorage')",
	"settings.costOptimization.level.description": "Set the optimization level to balance between cost efficiency and quality. 'cost_focused' prioritizes minimizing token usage, 'balanced' maintains a balance, and 'quality_focused' prioritizes thoroughness.",
	"settings.costOptimization.maxContextWindowUsage.description": "Percentage of the model's context window to use. Lower values reduce token usage and costs.",
	"settings.costOptimization.useLocalRag.description": "Use local Retrieval Augmented Generation to efficiently retrieve relevant context without sending all code to the LLM.",
	"settings.costOptimization.maxOutputTokens.description": "Maximum number of tokens to generate in a response. Lower values reduce costs.",
	"settings.costOptimization.compressCodeInContext.description": "Compress code snippets in the context window to reduce token usage. May affect quality."
}
